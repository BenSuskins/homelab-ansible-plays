---
- name: AUTHENTIK - Create directories and set permissions
  ansible.builtin.file:
    path: "{{ item }}"
    recurse: true
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0777"
  loop:
    - "{{ base_dir }}/authentik/postgres/pgdata"
    - "{{ base_dir }}/authentik/redis"
    - "{{ base_dir }}/authentik/media"
    - "{{ base_dir }}/authentik/custom-templates"
    - "{{ base_dir }}/authentik/certs"

- name: AUTHENTK SERVER - Add to scrape configs
  ansible.builtin.set_fact:
    prometheus_scrape_configs: >-
      {{
        (prometheus_scrape_configs | default([])) +
        [ {
          'job_name': 'authentik',
          'scrape_interval': '60s',
          'static_configs': [ { 'targets': [ ansible_host ~ ':9300' ] } ]
        } ]
      }}

- name: AUTHENTIK SERVER - Create container
  community.docker.docker_container:
    name: authentik_server
    image: ghcr.io/goauthentik/server:2025.8.1
    restart_policy: always
    state: started
    pull: true
    command: server
    networks:
      - name: homelab
    ports:
      - "9000:9000"
      - "9443:9443"
      - "9300:9300"
    env:
      AUTHENTIK_REDIS__HOST: "authentik_redis"
      AUTHENTIK_POSTGRESQL__HOST: "authentik_postgres"
      AUTHENTIK_POSTGRESQL__USER: "authentik"
      AUTHENTIK_POSTGRESQL__NAME: "authentik"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ PG_PASS }}"
      AUTHENTIK_SECRET_KEY: "{{ AUTHENTIK_SECRET_KEY }}"
    volumes:
      - "{{ base_dir }}/authentik/media:/media"
      - "{{ base_dir }}/authentik/custom-templates:/templates"
