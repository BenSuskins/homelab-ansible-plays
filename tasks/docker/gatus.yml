---
- name: GATUS - Create directory and permissions
  ansible.builtin.file:
    path: "{{ item }}"
    recurse: true
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0750"
  loop:
    - "{{ base_dir }}/gatus"

- name: GATUS - Combines monitored entries
  delegate_to: localhost
  set_fact:
    monitored_services: >-
      {{
        monitored_services | default([]) +
        (hostvars
          | dict2items
          | selectattr('value.docker_services', 'defined')
          | map(attribute='value.docker_services')
          | list
          | flatten)
      }}

- name: GATUS - Create config
  ansible.builtin.template:
    src: ../config/gatus/config.yaml.j2
    dest: "{{ base_dir }}/gatus/config.yaml"
    owner: "{{ username }}"
    group: "{{ username }}"
  vars:
    monitored_services: "{{ monitored_services }}"

- name: GATUS - Create container
  community.docker.docker_container:
    name: gatus
    image: twinproduction/gatus:latest
    restart_policy: always
    restart: true
    state: started
    pull: true
    ports:
      - "8080:8080"
    networks:
      - name: homelab
    volumes:
      - "{{ base_dir }}/gatus:/config"

- name: GATUS - Set homepage entry
  set_fact:
    docker_services: "{{ (docker_services | default([])) + [ {
      'container': 'gatus',
      'ip': inventory_hostname,
      'friendly_name': friendly_name,
      'port': 8080,
    } ] }}"

- name: GATUS - Add to scrape configs
  set_fact:
    prometheus_scrape_configs: "{{ (prometheus_scrape_configs | default([])) +
        [ {
          'job_name': 'gatus',
          'scrape_interval': '30s',
          'static_configs': [ { 'targets': [ ansible_host ~ ':8080' ] } ]
        } ]
      }}"
